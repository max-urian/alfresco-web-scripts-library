companyhome = {
    setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    newInstance:function(nodeInfo,services,scope){},
    newInstance:function(nodeRef,services,scope){},
    access$000:function(x0){},
    getParent:function(){},
    getProperties:function(){},
    getPermissions:function(){},
    getId:function(){},
    setName:function(name){},
    save:function(){},
    copy:function(destination,deepCopy){},
    copy:function(destination){},
    getType:function(){},
    getSize:function(){},
    reset:function(){},
    exists:function(){},           setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    sort:function(nodes){},
    setPermission:function(permission,authority){},
    setPermission:function(permission){},
    getContent:function(){},
    unlock:function(){},
    getOwner:function(){}
};

document={setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    newInstance:function(nodeInfo,services,scope){},
    newInstance:function(nodeRef,services,scope){},
    access$000:function(x0){},
    getParent:function(){},
    getProperties:function(){},
    getPermissions:function(){},
    getId:function(){},
    setName:function(name){},
    save:function(){},
    copy:function(destination,deepCopy){},
    copy:function(destination){},
    getType:function(){},
    getSize:function(){},
    reset:function(){},
    exists:function(){},           setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    sort:function(nodes){},
    setPermission:function(permission,authority){},
    setPermission:function(permission){},
    getContent:function(){},
    unlock:function(){},
    getOwner:function(){}};

person={setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    newInstance:function(nodeInfo,services,scope){},
    newInstance:function(nodeRef,services,scope){},
    access$000:function(x0){},
    getParent:function(){},
    getProperties:function(){},
    getPermissions:function(){},
    getId:function(){},
    setName:function(name){},
    save:function(){},
    copy:function(destination,deepCopy){},
    copy:function(destination){},
    getType:function(){},
    getSize:function(){},
    reset:function(){},
    exists:function(){},           setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    sort:function(nodes){},
    setPermission:function(permission,authority){},
    setPermission:function(permission){},
    getContent:function(){},
    unlock:function(){},
    getOwner:function(){}};

roothome={setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    newInstance:function(nodeInfo,services,scope){},
    newInstance:function(nodeRef,services,scope){},
    access$000:function(x0){},
    getParent:function(){},
    getProperties:function(){},
    getPermissions:function(){},
    getId:function(){},
    setName:function(name){},
    save:function(){},
    copy:function(destination,deepCopy){},
    copy:function(destination){},
    getType:function(){},
    getSize:function(){},
    reset:function(){},
    exists:function(){},           setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    sort:function(nodes){},
    setPermission:function(permission,authority){},
    setPermission:function(permission){},
    getContent:function(){},
    unlock:function(){},
    getOwner:function(){}};

script={setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    newInstance:function(nodeInfo,services,scope){},
    newInstance:function(nodeRef,services,scope){},
    access$000:function(x0){},
    getParent:function(){},
    getProperties:function(){},
    getPermissions:function(){},
    getId:function(){},
    setName:function(name){},
    save:function(){},
    copy:function(destination,deepCopy){},
    copy:function(destination){},
    getType:function(){},
    getSize:function(){},
    reset:function(){},
    exists:function(){},           setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    sort:function(nodes){},
    setPermission:function(permission,authority){},
    setPermission:function(permission){},
    getContent:function(){},
    unlock:function(){},
    getOwner:function(){}};

space={setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    newInstance:function(nodeInfo,services,scope){},
    newInstance:function(nodeRef,services,scope){},
    access$000:function(x0){},
    getParent:function(){},
    getProperties:function(){},
    getPermissions:function(){},
    getId:function(){},
    setName:function(name){},
    save:function(){},
    copy:function(destination,deepCopy){},
    copy:function(destination){},
    getType:function(){},
    getSize:function(){},
    reset:function(){},
    exists:function(){},           setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    sort:function(nodes){},
    setPermission:function(permission,authority){},
    setPermission:function(permission){},
    getContent:function(){},
    unlock:function(){},
    getOwner:function(){}};

userhome={setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    newInstance:function(nodeInfo,services,scope){},
    newInstance:function(nodeRef,services,scope){},
    access$000:function(x0){},
    getParent:function(){},
    getProperties:function(){},
    getPermissions:function(){},
    getId:function(){},
    setName:function(name){},
    save:function(){},
    copy:function(destination,deepCopy){},
    copy:function(destination){},
    getType:function(){},
    getSize:function(){},
    reset:function(){},
    exists:function(){},           setScope:function(scope){},
    getStoreType:function(){},
    getStoreId:function(){},
    getNodeRef:function(){},
    getQNameType:function(){},
    getTypeShort:function(){},
    getChildren:function(){},
    getHasChildren:function(){},
    childByNamePath:function(path){},
    childrenByXPath:function(xpath){},
    childFileFolders:function(files,folders){},
    childFileFolders:function(){},
    childFileFolders:function(files,folders,ignoreTypes){},
    childFileFolders:function(files,folders,ignoreTypes,skipOffset,maxItems,requestTotalCountMax,sortProp,sortAsc,queryExecutionId){},
    childFileFolders:function(files,folders,ignoreTypes,maxItems){},
    getAssocs:function(){},
    getAssociations:function(){},
    getSourceAssocs:function(){},
    getSourceAssociations:function(){},
    getChildAssocs:function(){},
    getChildAssociations:function(){},
    getChildAssocsByType:function(type){},
    getParentAssocs:function(){},
    getParentAssociations:function(){},
    getTypePropertyNames:function(){},
    getTypePropertyNames:function(useShortQNames){},
    getPropertyNames:function(useShortQNames){},
    getIsContainer:function(){},
    getIsDocument:function(){},
    getIsLinkToContainer:function(){},
    getIsLinkToDocument:function(){},
    getIsCategory:function(){},
    getAspectsSet:function(){},
    getAspects:function(){},
    getAspectsShort:function(){},
    hasAspect:function(aspect){},
    isSubType:function(type){},
    getQnamePath:function(){},
    getDisplayPath:function(){},
    getIcon16:function(){},
    getIcon32:function(){},
    getIsLocked:function(){},
    getParents:function(){},
    getPrimaryParentAssoc:function(){},
    setContent:function(content){},
    getUrl:function(){},
    getDownloadUrl:function(){},
    jsGet_downloadUrl:function(){},
    getWebdavUrl:function(){},
    getMimetype:function(){},
    setMimetype:function(mimetype){},
    hasPermission:function(permission){},
    getDirectPermissions:function(){},
    getFullPermissions:function(){},
    retrieveAllSetPermissions:function(direct,full){},
    getSettablePermissions:function(){},
    inheritsPermissions:function(){},
    setInheritsPermissions:function(inherit){},
    removePermission:function(permission,authority){},
    removePermission:function(permission){},
    setOwner:function(userId){},
    takeOwnership:function(){},
    specializeType:function(type){},
    createFile:function(name,type){},
    createFile:function(name){},
    createFolder:function(name,type){},
    createFolder:function(name){},
    createNode:function(name,type,properties){},
    createNode:function(name,type,properties,assocType){},
    createNode:function(name,type,properties,assocType,assocName){},
    createNode:function(name,type,assocType){},
    createNode:function(name,type){},
    addNode:function(node){},
    removeNode:function(node){},
    createAssociation:function(target,assocType){},
    removeAssociation:function(target,assocType){},
    revert:function(history,majorVersion,versionLabel){},
    revert:function(history,majorVersion,versionLabel,deep){},
    move:function(source,destination){},
    move:function(destination){},
    addAspect:function(type,props){},
    addAspect:function(type){},
    extractScriptableProperties:function(scriptable,map){},
    removeAspect:function(type){},
    ensureVersioningEnabled:function(autoVersion,autoVersionProps){},
    createVersion:function(history,majorVersion){},
    getIsVersioned:function(){},
    getVersionHistory:function(){},
    getVersion:function(versionLabel){},
    checkout:function(destination){},
    checkout:function(){},
    checkoutForUpload:function(){},
    checkin:function(){},
    checkin:function(history,majorVersion){},
    checkin:function(history){},
    cancelCheckout:function(){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype,destination){},
    transformDocument:function(mimetype){},
    transformNode:function(transformer,mimetype,destination){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype){},
    transformImage:function(mimetype,options,destination){},
    transformImage:function(mimetype,destination){},
    transformImage:function(mimetype,options){},
    processTemplate:function(template,templateRef,args){},
    processTemplate:function(template){},
    processTemplate:function(template,args){},
    processTemplate:function(template,args){},
    processTemplate:function(template){},
    createThumbnail:function(thumbnailName,async){},
    createThumbnail:function(thumbnailName){},
    getThumbnail:function(thumbnailName){},
    getThumbnails:function(){},
    getThumbnailDefinitions:function(){},
    getThumbnailDefintions:function(){},
    clearTags:function(){},
    addTag:function(tag){},
    addTags:function(tags){},
    removeTag:function(tag){},
    removeTags:function(tags){},
    getTags:function(){},
    setTags:function(tags){},
    updateTagProperty:function(){},
    setIsTagScope:function(value){},
    getIsTagScope:function(){},
    getTagScope:function(){},
    childrenByTags:function(tag){},
    getActiveWorkflows:function(){},
    getSiteShortName:function(){},
    toJSON:function(useShortQNames){},
    toJSON:function(){},
    getShortQName:function(longQName){},
    createQName:function(s){},
    getCrossRepositoryCopyHelper:function(){},
    getChildrenByXPath:function(xpath,params,firstOnly){},
    isScriptContent:function(o){},
    getValueConverter:function(){},
    createValueConverter:function(){},
    getNamespacePrefixResolver:function(){},
    remove:function(){},
    equals:function(obj){},
    toString:function(){},
    hashCode:function(){},
    getName:function(){},
    access$100:function(){},
    sort:function(nodes){},
    setPermission:function(permission,authority){},
    setPermission:function(permission){},
    getContent:function(){},
    unlock:function(){},
    getOwner:function(){}};

session={setServiceRegistry:function(services){},
    getTicket:function(){}};

slingshotDocLib={getJSONObj:function(){},
    getJSON:function(){},
    setCustomResponses:function(customResponses){}};

stringUtils={stripEncodeUnsafeHTML:function(s){},
    stripUnsafeHTML:function(s){},
    replaceLineBreaks:function(s){},
    encodeHTML:function(s){},
    encodeJavaScript:function(s){},
    urlEncode:function(s){},
    urlEncodeComponent:function(s){},
    urlDecode:function(s){},
    parseXMLNodeModel:function(xml){}};

test={fail:function(message){},
    assertEquals:function(expected,value){},
    assertEquals:function(expected,value,message){},
    assertNotEquals:function(expected,value){},
    assertNotEquals:function(expected,value,message){},
    assertNotNull:function(value){},
    assertNotNull:function(value,message){},
    assertNull:function(value,message){},
    assertNull:function(value){},
    assertTrue:function(value){},
    assertTrue:function(value,message){},
    assertFalse:function(value,message){},
    assertFalse:function(value){},
    assertContains:function(value,subString,message){},
    assertContains:function(value,subString){}};

utils={getNodeFromString:function(nodeRefString){},
    moduleInstalled:function(moduleName){},
    toISO8601:function(date){},
    toISO8601:function(timeInMillis){},
    fromISO8601:function(isoDateString){},
    shortQName:function(s){},
    longQName:function(s){},
    createPaging:function(maxItems,skipCount,queryExecutionId){},
    createPaging:function(maxItems,skipCount){},
    createPaging:function(args){},
    createQName:function(s){},
    disableRules:function(){},
    enableRules:function(){},
    setLocale:function(localeStr){},
    getLocale:function(){},
    setServiceRegistry:function(services){},
    setNodeService:function(nodeService){},
    pad:function(s,len){},
    displayPath:function(node){},
    toBoolean:function(booleanString){}};

webprojects={setWebProjectService:function(webProjectService){},
    getWebProjectService:function(){},
    setSandboxService:function(sandboxService){},
    getSandboxService:function(){},
    setAssetService:function(assetService){},
    getAssetService:function(){},
    setNamespaceService:function(namespaceService){},
    getNamespaceService:function(){},
    createWebProject:function(dnsName,name,title,description){},
    getWebProject:function(webProjectRef){},
    listWebProjects:function(){},
    listWebProjects:function(userName){},
    setServiceRegistry:function(serviceRegistry){},
    getServiceRegistry:function(){}};

workflow={getInstance:function(workflowInstanceID){},
    getDefinition:function(id){},
    setServiceRegistry:function(services){},
    setMaxGroupReviewers:function(maxGroupReviewers){},
    getMaxGroupReviewers:function(){},
    getDefinitionByName:function(name){},
    getAssignedTasks:function(){},
    getCompletedTasks:function(){},
    getPooledTasks:function(authority){},
    getTask:function(id){},
    getTaskById:function(id){},
    getLatestDefinitions:function(){},
    getAllDefinitions:function(){},
    createPackage:function(){},
    getAssignedTasksByState:function(state){}};

actionTrackingService={};

atom={};

commentService={};

formService={setFormService:function(formService){},
    getForm:function(itemKind,itemId,fields){},
    getForm:function(itemKind,itemId,fields,forcedFields){},
    getForm:function(itemKind,itemId){},
    saveForm:function(itemKind,itemId,postData){}};

groups={setServiceRegistry:function(serviceRegistry){},
    getAuthorityService:function(){},
    searchRootGroupsInZone:function(displayNamePattern,zone,paging,sortBy){},
    searchRootGroupsInZone:function(displayNamePattern,zone,maxItems,skipCount){},
    searchRootGroupsInZone:function(displayNamePattern,zone){},
    searchRootGroups:function(displayNamePattern){},
    searchRootGroups:function(displayNamePattern,paging,sortBy){},
    getAllRootGroups:function(paging){},
    getAllRootGroups:function(maxItems,skipCount){},
    getAllRootGroups:function(){},
    getAllRootGroupsInZone:function(zone,maxItems,skipCount){},
    getAllRootGroupsInZone:function(zone){},
    getAllRootGroupsInZone:function(zone,paging,sortBy){},
    getGroups:function(filter,paging){},
    getGroups:function(filter,paging,sortBy){},
    getGroupsInZone:function(filter,zone,paging,sortBy,sortAsc){},
    getGroupsInZone:function(filter,zone,paging,sortBy){},
    getGroup:function(shortName){},
    getGroupForFullAuthorityName:function(fullAuthorityName){},
    createRootGroup:function(shortName,displayName){},
    searchGroups:function(shortNameFilter){},
    searchGroups:function(shortNameFilter,paging,sortBy){},
    searchGroupsInZone:function(shortNameFilter,zone,maxItems,skipCount){},
    searchGroupsInZone:function(shortNameFilter,zone){},
    searchGroupsInZone:function(shortNameFilter,zone,paging,sortBy){},
    getUser:function(username){},
    searchUsers:function(nameFilter,paging,sortBy){},
    tokeniseName:function(nameFilter){}};

invitations={setInvitationService:function(invitationService){},
    setNodeService:function(nodeService){},
    setPersonService:function(personService){},
    listInvitations:function(props){},
    afterPropertiesSet:function(){}};

preferenceService={getAllowWrite:function(){},
    setServiceRegistry:function(services){},
    setPreferenceService:function(preferenceService){},
    getPreferences:function(userName){},
    getPreferences:function(userName,preferenceFilter){},
    setPrefValue:function(keys,value,object){},
    setPreferences:function(userName,preferences){},
    getPrefValues:function(currentObject,currentKey,values){},
    clearPreferences:function(userName){},
    clearPreferences:function(userName,preferenceFilter){},
    getAppendedKey:function(currentKey,key){},
    setTransactionService:function(transactionService){}};

ratingService={removeRating:function(node,ratingSchemeName){},
    getRating:function(node,ratingSchemeName){},
    getRatingAppliedAt:function(node,ratingSchemeName){},
    getRatingsCount:function(node,ratingSchemeName){},
    getTotalRating:function(node,ratingSchemeName){},
    getAverageRating:function(node,ratingSchemeName){},
    setServiceRegistry:function(serviceRegistry){},
    getRatingSchemeNames:function(){},
    getMin:function(ratingSchemeName){},
    getMax:function(ratingSchemeName){},
    isSelfRatingAllowed:function(ratingSchemeName){},
    applyRating:function(node,rating,ratingSchemeName){}};

renditionService={access$000:function(x0){},
    setServiceRegistry:function(serviceRegistry){},
    loadRenditionDefinitionImpl:function(shortOrLongFormQName){},
    createRenditionDefinition:function(renditionName,renderingEngineName){},
    render:function(sourceNode,scriptRenditionDef){},
    render:function(sourceNode,renditionDefQName){},
    getRenditions:function(node){},
    getRenditions:function(node,mimeTypePrefix){},
    getRenditionByName:function(node,renditionName){},
    createQName:function(qnameString){}};

replicationService={createReplicationDefinition:function(replicationName,description){},
    saveReplicationDefinition:function(definition){},
    loadReplicationDefinitions:function(){},
    loadReplicationDefinitions:function(targetName){},
    replicate:function(definition){},
    toScriptReplicationDefinitions:function(definitions){},
    setServiceRegistry:function(serviceRegistry){},
    setReplicationService:function(replicationService){},
    loadReplicationDefinition:function(replicationName){}};

siteService={hasSite:function(shortName){},
    hasCreateSitePermissions:function(){},
    isSiteManager:function(siteId){},
    getSites:function(filter,sitePresetFilter,size){},
    listSites:function(filter,sitePresetFilter,size){},
    listSites:function(filter,sitePresetFilter){},
    findSites:function(filter,sitePresetFilter,size){},
    makeSitesArray:function(siteInfos){},
    listUserSites:function(userName,size){},
    listUserSites:function(userName){},
    getSite:function(shortName){},
    listSiteRoles:function(){},
    listSiteRoles:function(shortName){},
    cleanSitePermissions:function(targetNode){},
    cleanSitePermissions:function(targetNode){},
    setServiceRegistry:function(serviceRegistry){},
    setSiteService:function(siteService){},
    createSite:function(sitePreset,shortName,title,description,visibility,siteType){},
    createSite:function(sitePreset,shortName,title,description,visibility){},
    createSite:function(sitePreset,shortName,title,description,isPublic){}};

taggingService={getTags:function(store,filter){},
    getTags:function(store){},
    getTag:function(store,tag){},
    setServiceRegistry:function(serviceRegistry){},
    createTag:function(store,tag){},
    deleteTag:function(store,tag){}};

thumbnailService={classpathResourceExists:function(resourcePath){},
    setServiceRegistry:function(serviceRegistry){},
    isThumbnailNameRegistered:function(thumbnailName){},
    getPlaceHolderResourcePath:function(thumbnailName){},
    getMimeAwarePlaceHolderResourcePath:function(thumbnailName,mimetype){}};

transfer={getTransferTargetsByGroup:function(groupName){},
    getAllTransferTargets:function(){},
    getTransferTarget:function(name){},
    transferReadOnly:function(targetName,nodesToTransfer){},
    setServiceRegistry:function(serviceRegistry){},
    getServiceRegistry:function(){},
    setExcludedAspects:function(excludedAspects){},
    setTransferService:function(transferService){},
    getTransferService:function(){},
    remove:function(targetName,nodesToRemove){},
    transfer:function(targetName,nodesToTransfer){}};

actions = {
    create:function(actionName){},
    getRegistered:function(){},
    setServiceRegistry:function(serviceRegistry){}
};

activities = {
    postActivity:function(activityType,siteId,appTool,nodeRef,name,typeQName,parentNodeRef){},
    postActivity:function(activityType,siteId,appTool,nodeRef){},
    postActivity:function(activityType,siteId,appTool,jsonActivityData){},
    postActivity:function(activityType,siteId,appTool,nodeRef,beforeName){},
    getFeedControls:function(){},
    setFeedControl:function(siteId,appToolId){},
    unsetFeedControl:function(siteId,appToolId){},
    setActivityService:function(activityService){}
};

appUtils = {
    toJSON:function(node,useShortQNames){},
    toJSON:function(node){},
    setJsonConversionComponent:function(jsonConversionComponent){},
    getDownloadAPIUrl:function(node){}
};

avm = {
    setServiceRegistry:function(serviceRegistry){},
    getStores:function(){},
    lookupStore:function(store){},
    lookupStoreRoot:function(store){},
    lookupNode:function(path){},
    getModifiedItems:function(storeId,username,webapp){},
    stagingStore:function(storeId){},
    userSandboxStore:function(storeId,username){},
    websiteStagingUrl:function(storeId){},
    websiteUserSandboxUrl:function(storeId,username){},
    assetUrl:function(avmPath){},
    assetUrl:function(storeId,assetPath){},
    getWebappsFolderPath:function(){}
};

bulkFSImport = {
    getStoreNames: function () {},
    setStoreMapProvider: function (storeMapProvider) {}
};

classification = {
    setStoreUrl:function(storeRef){},
    setServiceRegistry:function(services){},
    getAllCategoryNodes:function(aspect){},
    getAllClassificationAspects:function(){},
    createRootCategory:function(aspect,name){},
    getCategory:function(categoryRef){},
    getRootCategories:function(aspect){},
    getCategoryUsage:function(aspect,maxCount){},
    buildCategoryNodes:function(cars){},
    createQName:function(s){}
};

crossRepoCopy = {
    setServiceRegistry: function (services) {},
    copy: function (src, dest, name) {}
};

format = {
    getName: function () {},
    getType: function () {}
};

imap = {
    setStoreUrl: function (storeRef) {},
    setServiceRegistry: function (services) {},
    setRepositoryHelper: function (repository) {},
    getImapHomeRef: function (userName) {}
};

jsonUtils = {
    toJSONString:function(object){},
    toJSONObject:function(object){},
    toObject:function(jsonObject){},
    toObject:function(jsonString){},
    nativeObjectToJSONString:function(nativeObject,writer){},
    nativeArrayToJSONString:function(nativeArray,writer){},
    valueToJSONString:function(value,writer){},
    encodeJSONString:function(value){},
    isArray:function(ids){}
};

people = {
    afterPropertiesSet:function(){}
    , setStoreUrl:function(storeRef){}
    , setAuthenticationService:function(authenticationService){}
    , setServiceRegistry:function(serviceRegistry){}
    , setAuthorityDAO:function(authorityDAO){}
    , setAuthorityService:function(authorityService){}
    , setPersonService:function(personService){}
    , setContentUsageService:function(contentUsageService){}
    , setTenantService:function(tenantService){}
    , setUserNameGenerator:function(userNameGenerator){}
    , setUserRegistrySynchronizer:function(userRegistrySynchronizer){}
    , setDefaultListMaxResults:function(defaultListMaxResults){}
    , deletePerson:function(username){}
    , createPerson:function(userName){}
    , createPerson:function(userName,firstName,lastName,emailAddress,password,setAccountEnabled,notifyByEmail){}
    , createPerson:function(userName,firstName,lastName,emailAddress){}
    , createPerson:function(userName,firstName,lastName,emailAddress,password,setAccountEnabled){}
    , enableAccount:function(userName){}
    , disableAccount:function(userName){}
    , isAccountEnabled:function(userName){}
    , changePassword:function(oldPassword,newPassword){}
    , setPassword:function(userName,password){}
    , setQuota:function(person,quota){}
    , getPeople:function(filter,maxResults){}
    , getPeople:function(filter){}
    , getPeople:function(filter,maxResults,sortBy,sortAsc){}
    , getPeoplePaging:function(filter,pagingRequest,sortBy,sortAsc){}
    , getPeopleImpl:function(filter,pagingRequest,sortBy,sortAsc){}
    , getPeopleImplDB:function(filter,pagingRequest,sortBy,sortAsc){}
    , getPeopleImplSearch:function(filter,pagingRequest,sortBy,sortAsc){}
    , getSortedPeopleObjects:function(peopleRefs,sortBy,sortAsc){}
    , getPerson:function(username){}
    , getPersonFullName:function(username){}
    , getGroup:function(groupName){}
    , deleteGroup:function(group){}
    , createGroup:function(groupName){}
    , createGroup:function(parentGroup,groupName){}
    , addAuthority:function(parentGroup,authority){}
    , removeAuthority:function(parentGroup,authority){}
    , getContainerGroups:function(person){}
    , isAdmin:function(person){}
    , isGuest:function(person){}
    , getCapabilities:function(person){}
    , getImmutableProperties:function(username){}
    , getContainedAuthorities:function(container,type,recurse){}
    , getExcludeTenantFilter:function(){}
    , getPermissionEvaluationMode:function(){}
    , access$100:function(x0){}
    , access$000:function(x0){}
    , getMembers:function(group){}
    , getMembers:function(group,recurse){}
};

presence = {
    setServiceRegistry:function(serviceRegistry){}
    , hasPresence:function(person){}
    , getDetails:function(person){}
};

logger = {
    isLoggingEnabled:function(){}
    , info:function(str){}
    , isDebugLoggingEnabled:function(){}
    , isInfoLoggingEnabled:function(){}
    , isWarnLoggingEnabled:function(){}
    , warn:function(str){}
    , isErrorLoggingEnabled:function(){}
    , getSystem:function(){}
    , log:function(str){}
    , debug:function(str){}
    , error:function(str){}
};

msg = {
    get:function(id){}
    , get:function(id,args){}
};

search = {
    setStoreUrl:function(storeRef){},
    setServiceRegistry:function(services){},
    findNode:function(ref){},
    findNode:function(ref){},
    findNode:function(referenceType,reference){},
    setRepositoryHelper:function(repository){},
    setSearchSubsystemSwitchableApplicationContextFactory:function(searchSubsystem){},
    getSearchSubsystem:function(){},
    xpathSearch:function(store,search){},
    xpathSearch:function(search){},
    selectNodes:function(search){},
    selectNodes:function(store,search){},
    isValidXpathQuery:function(query){},
    luceneSearch:function(search,sortColumn,asc){},
    luceneSearch:function(search,sortColumn,asc,max){},
    luceneSearch:function(store,search,sortColumn,asc){},
    luceneSearch:function(store,search,sortColumn,asc,max){},
    luceneSearch:function(store,search){},
    luceneSearch:function(search){},
    savedSearch:function(searchRef){},
    savedSearch:function(savedSearch){},
    tagSearch:function(store,tag){},
    ISO9075Encode:function(s){},
    ISO9075Decode:function(s){},
    query:function(sp,exceptionOnError){},
    query:function(search){},
    query:function(store,search,sort,language,maxResults,skipResults){},
    query:function(store,search,sort,language){}
};




